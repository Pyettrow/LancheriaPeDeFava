/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAL.DAO;
import Model.Categoria;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author William
 */
public class FrmCadastroCategoria extends javax.swing.JDialog {
    /*Modo habilitado é quando apertar novamente irá fazer a edição*/
    boolean novoRegistroHabilitado = false;
    boolean alterandoRegistrosHabilitado = false;
    
    /**
     * Creates new form FrmManutencaoCategoria
     */
    public FrmCadastroCategoria() {
        initComponents();
        this.setModal(true);
        desativaTelaLimpaCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLCodigoCategoria = new javax.swing.JLabel();
        jBPesquisar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBAdd = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jTFNomeCategoria = new javax.swing.JTextField();

        jButton5.setText("jButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Categoria");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Categoria"));

        jLabel1.setText("Código:");
        jLabel1.setToolTipText("Código da Categoria");

        jLabel2.setText("Nome:");
        jLabel2.setToolTipText("Nome da Categoria");

        jLCodigoCategoria.setText("1");
        jLCodigoCategoria.setToolTipText("Código da Categoria");

        jBPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/Pesquisar.png"))); // NOI18N
        jBPesquisar.setToolTipText("Pesquisar Registro");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        jBExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/Remove.png"))); // NOI18N
        jBExcluir.setToolTipText("Apagar registro");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/Editar.png"))); // NOI18N
        jBAlterar.setToolTipText("Alterar registro");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/Add.png"))); // NOI18N
        jBAdd.setToolTipText("Adicionar Registro");
        jBAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddActionPerformed(evt);
            }
        });
        jBAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBAddKeyPressed(evt);
            }
        });

        jBCancelar.setMnemonic('C');
        jBCancelar.setText("Cancelar");
        jBCancelar.setToolTipText("Cancelar operação");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jTFNomeCategoria.setToolTipText("Nome da Categoria");
        jTFNomeCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFNomeCategoriaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jBAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jBPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(163, 163, 163))
                            .addComponent(jTFNomeCategoria)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLCodigoCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(122, 122, 122)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLCodigoCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFNomeCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botão Adcionar: Se variavel novoRegistroHabilitado == true irá habilitar 
     * o jTFNomeCategoria para cadastrar a categoria e irá pegar o novo codigo 
     * para o novo cadastro com base no ultimo registro add mais um.
     * @param evt 
     */
    private void jBAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddActionPerformed
        botaoAdd();
    }//GEN-LAST:event_jBAddActionPerformed

    /**
     * Botão Pesquisar: Irá abrir o FrmPesquisa com a listagem das categorias
     * e após selecionar irá retornar um frm.getIdRegistro() e frm.getNomeRegistro()
     * com o id e o nome da categoria selecionada.
     * @param evt 
     */
    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        FrmPesquisa frm = new FrmPesquisa(1);
        frm.setVisible(true);
        if(frm.getIdRegistro() > 0){
            jLCodigoCategoria.setText(String.valueOf(frm.getIdRegistro()));
            jTFNomeCategoria.setText(frm.getNomeRegistro());
            jBCancelar.setVisible(true);
        }        
    }//GEN-LAST:event_jBPesquisarActionPerformed

    /**
     * Botão Alterar: Se alterandoRegistrosHabilitado == true irá alterar o 
     * registro no banco de dados com base no que foi escrito no jTFNomeCategoria
     * senão ira dar aviso
     * @param evt 
     */
    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        if(alterandoRegistrosHabilitado == true){
            try {
                DAL.DAO<Categoria> alterandoRegistro = new DAL.DAO();
                Categoria alterCat = new Categoria();
                
                alterCat.setIdCategoria(Integer.parseInt(jLCodigoCategoria.getText()));
                alterCat.setDescricao(jTFNomeCategoria.getText());
                
                alterandoRegistro.alterarRegistro(alterCat);
                
                jLCodigoCategoria.setText("");
                jTFNomeCategoria.setText("");
                jTFNomeCategoria.setEditable(false);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmCadastroCategoria.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FrmCadastroCategoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            if(!jTFNomeCategoria.getText().isEmpty()){
                jTFNomeCategoria.setEditable(true);
                jBAdd.setEnabled(false);
                jBExcluir.setEnabled(false);
                jBPesquisar.setEnabled(false);
                alterandoRegistrosHabilitado = true;
            }else{
                JOptionPane.showMessageDialog(null, "Necessário escolher um registro para alterar");
            }
        }
    }//GEN-LAST:event_jBAlterarActionPerformed

    /**
     * Tratamento do botão para excluir o registro com base no jTFNomeCategoria 
     * e jLCodigoCategoria 
     * @param evt 
     */
    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        if(!jTFNomeCategoria.getText().isEmpty()){
            try {
                DAL.DAO<Categoria> excluirCat = new DAL.DAO();
                
                Categoria catExcluir = new Categoria();
                catExcluir.setIdCategoria(Integer.parseInt(jLCodigoCategoria.getText()));
                catExcluir.setDescricao(jTFNomeCategoria.getText());
                
                excluirCat.excluirRegistro(1, catExcluir);
                
                jLCodigoCategoria.setText("");
                jTFNomeCategoria.setText("");
                jBCancelar.setVisible(false);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmCadastroCategoria.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                if(String.valueOf(ex).contains("Cannot delete or update a parent row")){
                    JOptionPane.showMessageDialog(null, "Produto possui vinculo.\nNão é possivel realizar sua exclusão!");
                }else{
                    Logger.getLogger(FrmCadastroProduto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Escolha um registro para a exclusão!");
        }
    }//GEN-LAST:event_jBExcluirActionPerformed

    /**
     * Botão de limpar os campos e para qualquer alteraçao/inserção
     * @param evt 
     */
    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        desativaTelaLimpaCampos();
    }//GEN-LAST:event_jBCancelarActionPerformed

    /**
     * Tratando as teclas "CTRL + I" para habilitar o modo de inclusão de uma 
     * categoria
     * @param evt 
     */
    private void jBAddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBAddKeyPressed
        if(evt.isControlDown() == true){
            if(evt.getKeyCode() == KeyEvent.VK_I){
                botaoAdd();
            }
        }
    }//GEN-LAST:event_jBAddKeyPressed

    /**
     * Tratando as telcas "CTRL + S" para quando prestes a inserir registro e 
     * chama função para inserção
     * @param evt 
     */
    private void jTFNomeCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNomeCategoriaKeyPressed
        if(novoRegistroHabilitado == true && alterandoRegistrosHabilitado == false){
            if(evt.isControlDown() == true){
                if(evt.getKeyCode() == KeyEvent.VK_S){
                    botaoAdd();
                }
            }
        }
    }//GEN-LAST:event_jTFNomeCategoriaKeyPressed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdd;
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLCodigoCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTFNomeCategoria;
    // End of variables declaration//GEN-END:variables

    /**
     * Função para poder limpar os campos da tela e habilitar os botões novamente
     */
    public void desativaTelaLimpaCampos(){
        jBAdd.setEnabled(true);
        jBAlterar.setEnabled(true);
        jBExcluir.setEnabled(true);
        jBPesquisar.setEnabled(true);
        jLCodigoCategoria.setText("");
        jTFNomeCategoria.setText("");
        jTFNomeCategoria.setEditable(false);
        jBCancelar.setVisible(false);
        alterandoRegistrosHabilitado = false;
        novoRegistroHabilitado = false;
    }
    
    /**
     * Botão Adcionar: Se variavel novoRegistroHabilitado == false irá habilitar 
     * o jTFNomeCategoria para cadastrar a categoria e irá pegar o novo codigo 
     * para o novo cadastro com base no ultimo registro add mais um. Se igual a 
     * true ira chamar o metodo para inserir o registro no banco
     */
    public void botaoAdd(){
        if(novoRegistroHabilitado == true){
            if(!jTFNomeCategoria.getText().equals("")){
                try {
                    Categoria novaCat = new Categoria();
                    novaCat.setDescricao(jTFNomeCategoria.getText());

                    DAO<Categoria> cat = new DAO<Categoria>();
                    cat.insertRegistro(novaCat);
                    
                    desativaTelaLimpaCampos();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FrmCadastroCategoria.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmCadastroCategoria.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Informe um nome para categoria!");
                jTFNomeCategoria.requestFocus();
            }
        }else{
            try {
                jBCancelar.setVisible(true);
                DAO<Categoria> cat = new DAO<Categoria>();
                String ultimoRegistro = cat.ultimoRegistro(Categoria.class);
                jLCodigoCategoria.setText(ultimoRegistro);
                jTFNomeCategoria.setEditable(true);
                jTFNomeCategoria.requestFocus();
                
                jBAlterar.setEnabled(false);
                jBExcluir.setEnabled(false);
                jBPesquisar.setEnabled(false);
                
                novoRegistroHabilitado = true;
                
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Problema com comando FrmCadastroCategoria:\n"+ex);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Problema com comando FrmCadastroCategoria:\n"+ex);
            }
        }
    }
    
}
