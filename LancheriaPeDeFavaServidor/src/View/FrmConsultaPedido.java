/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author William
 */
public class FrmConsultaPedido extends javax.swing.JDialog {

    /**
     * Creates new form FrmConsultaPedido
     */
    public FrmConsultaPedido() {
        initComponents();
        //this.setModal(true);
        //this.setResizable(false);
        atualizaListaPedido();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPGeral = new javax.swing.JPanel();
        jBFinalizarEntrega = new javax.swing.JButton();
        jBAtualizarTela = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPedidos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTItensPedidos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Pedidos");

        jBFinalizarEntrega.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/Verificado.png"))); // NOI18N
        jBFinalizarEntrega.setText("Finalizar Entrega");
        jBFinalizarEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFinalizarEntregaActionPerformed(evt);
            }
        });

        jBAtualizarTela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/Atualizar.png"))); // NOI18N
        jBAtualizarTela.setText("Atualizar a Tela");
        jBAtualizarTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAtualizarTelaActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pedidos por Entregar"));

        jTPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº Pedido", "Cliente", "Data/Hora", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTPedidos.setMinimumSize(new java.awt.Dimension(90, 0));
        jTPedidos.setPreferredSize(new java.awt.Dimension(220, 0));
        jTPedidos.getTableHeader().setReorderingAllowed(false);
        jTPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTPedidos);
        if (jTPedidos.getColumnModel().getColumnCount() > 0) {
            jTPedidos.getColumnModel().getColumn(0).setResizable(false);
            jTPedidos.getColumnModel().getColumn(0).setPreferredWidth(3);
            jTPedidos.getColumnModel().getColumn(1).setResizable(false);
            jTPedidos.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTPedidos.getColumnModel().getColumn(2).setResizable(false);
            jTPedidos.getColumnModel().getColumn(2).setPreferredWidth(10);
            jTPedidos.getColumnModel().getColumn(3).setResizable(false);
            jTPedidos.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens do Pedido Selecionado"));

        jTItensPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Produto", "Descrição", "Observação", "Qtde", "Vl. Unit.", "Vl. Total."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTItensPedidos);
        if (jTItensPedidos.getColumnModel().getColumnCount() > 0) {
            jTItensPedidos.getColumnModel().getColumn(0).setResizable(false);
            jTItensPedidos.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTItensPedidos.getColumnModel().getColumn(1).setResizable(false);
            jTItensPedidos.getColumnModel().getColumn(2).setResizable(false);
            jTItensPedidos.getColumnModel().getColumn(3).setResizable(false);
            jTItensPedidos.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTItensPedidos.getColumnModel().getColumn(4).setResizable(false);
            jTItensPedidos.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTItensPedidos.getColumnModel().getColumn(5).setResizable(false);
            jTItensPedidos.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPGeralLayout = new javax.swing.GroupLayout(jPGeral);
        jPGeral.setLayout(jPGeralLayout);
        jPGeralLayout.setHorizontalGroup(
            jPGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPGeralLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBFinalizarEntrega, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBAtualizarTela, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPGeralLayout.setVerticalGroup(
            jPGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPGeralLayout.createSequentialGroup()
                .addGroup(jPGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPGeralLayout.createSequentialGroup()
                        .addComponent(jBAtualizarTela, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBFinalizarEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBAtualizarTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAtualizarTelaActionPerformed
        limpaTabelaListaItens();
        atualizaListaPedido();
    }//GEN-LAST:event_jBAtualizarTelaActionPerformed

    private void jTPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTPedidosMouseClicked

        int linhaSelecionada = jTPedidos.getSelectedRow();        
        int codPedido = Integer.parseInt(jTPedidos.getValueAt(linhaSelecionada, 0).toString());

        limpaTabelaListaItens();
        atualizaListaItens(codPedido);
        
    }//GEN-LAST:event_jTPedidosMouseClicked

    private void jBFinalizarEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFinalizarEntregaActionPerformed
        limpaTabelaListaItens();
        
        if(jTPedidos.getSelectedRow() >= 0){
            
            try {
                
                DAL.DAO dao = new DAL.DAO();
                dao.diversos(2, (int) jTPedidos.getValueAt(jTPedidos.getSelectedRow(), 0));
                atualizaListaPedido();
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FrmConsultaPedido.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FrmConsultaPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBFinalizarEntregaActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAtualizarTela;
    private javax.swing.JButton jBFinalizarEntrega;
    private javax.swing.JPanel jPGeral;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTItensPedidos;
    private javax.swing.JTable jTPedidos;
    // End of variables declaration//GEN-END:variables

    public void atualizaListaPedido(){
        limpaTabelaListaItens();
        DefaultTableModel jTable = (DefaultTableModel) jTPedidos.getModel();
        float sumTotalPedido = 0;
        ArrayList<Pedido> lstPedidos = new ArrayList();
        
        for (int i = 0; i < jTable.getRowCount(); i++) {
            jTable.removeRow(0);
        }
        
        /*Limpando a tabela dos pedidos*/
        for (int i = 0; i < jTable.getRowCount(); i++) {
            jTable.removeRow(i);
        }
        
        String nomeCliente = "";
        try {
            DAL.DAO<Pedido> dao = new DAL.DAO();
            
            lstPedidos = dao.todosRegistros(Pedido.class, 0);            
            
            if(!lstPedidos.isEmpty()){
                for (int i = 0; i < lstPedidos.size(); i++) {
                    sumTotalPedido = dao.diversos(1, lstPedidos.get(i).getIdPedido());
                    Cliente cli = dao.consultaCliente(lstPedidos.get(i).getCliente_idCliente());
                    Object[] add = {lstPedidos.get(i).getIdPedido(), cli.getNomeCliente(), lstPedidos.get(i).getData(), "R$"+sumTotalPedido};
                    jTable.addRow(add);
                }
            }            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmConsultaPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsultaPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Verificar o modo de limpar linhas do PedidoItem
     */
    public void limpaTabelaListaItens(){
        DefaultTableModel jTable = (DefaultTableModel) jTItensPedidos.getModel();
        
        /*Limpando tabela dos itens*/
        if(jTable.getRowCount() > 0){           
            for (int j = 0 ; j <= jTable.getRowCount() ; j ++) {                
                jTable.removeRow(0);
            }
        }
    }
    
    public void atualizaListaItens(int numeroPedido){
        DefaultTableModel jTable = (DefaultTableModel) jTItensPedidos.getModel();
        
        try {
            
            DAL.DAO dao = new DAL.DAO();

            ArrayList<PedidoItem> lstPedidoItem = dao.todosRegistros(PedidoItem.class, numeroPedido);
            
            if(!lstPedidoItem.isEmpty()){
                for (int i = 0; i < lstPedidoItem.size(); i++) {
                    Produto pro = dao.consultaProduto(lstPedidoItem.get(i).getProduto_id());
                    Object[] add = {lstPedidoItem.get(i).getProduto_id(), pro.getDescricao(),lstPedidoItem.get(i).getObservacao(), 
                        lstPedidoItem.get(i).getQuantidade(), lstPedidoItem.get(i).getPreco(), "R$"+lstPedidoItem.get(i).getQuantidade()*lstPedidoItem.get(i).getPreco()};
                    jTable.addRow(add);
                }
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmConsultaPedido.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmConsultaPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}